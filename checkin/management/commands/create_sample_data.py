from django.core.management.base import BaseCommand
from users.models import User
from checkin.models import Area, Location

class Command(BaseCommand):
    help = 'T·∫°o d·ªØ li·ªáu m·∫´u cho areas v√† locations'

    def handle(self, *args, **options):
        self.stdout.write('ƒêang t·∫°o d·ªØ li·ªáu m·∫´u...')
        
        # L·∫•y admin user ƒë·ªÉ t·∫°o areas
        admin = User.objects.filter(role='admin').first()
        if not admin:
            self.stdout.write(self.style.ERROR('‚ùå Kh√¥ng t√¨m th·∫•y admin user!'))
            return
        
        # T·∫°o Areas m·∫´u
        areas_data = [
            {
                'name': 'VƒÉn ph√≤ng ch√≠nh',
                'description': 'T√≤a nh√† vƒÉn ph√≤ng ch√≠nh c·ªßa c√¥ng ty',
                'lat': 10.7769,
                'lng': 106.7009,
                'radius_m': 100,
            },
            {
                'name': 'Chi nh√°nh Qu·∫≠n 1',
                'description': 'Chi nh√°nh t·∫°i Qu·∫≠n 1, TP.HCM',
                'lat': 10.7769,
                'lng': 106.7009,
                'radius_m': 150,
            },
            {
                'name': 'Kho h√†ng B√¨nh D∆∞∆°ng',
                'description': 'Kho h√†ng t·∫°i B√¨nh D∆∞∆°ng',
                'lat': 10.9804,
                'lng': 106.6519,
                'radius_m': 200,
            },
        ]
        
        for area_data in areas_data:
            area, created = Area.objects.get_or_create(
                name=area_data['name'],
                defaults={
                    'description': area_data['description'],
                    'lat': area_data['lat'],
                    'lng': area_data['lng'],
                    'radius_m': area_data['radius_m'],
                    'created_by': admin,
                    'is_active': True,
                }
            )
            if created:
                self.stdout.write(
                    self.style.SUCCESS(f'‚úÖ ƒê√£ t·∫°o Area: {area.name}')
                )
            else:
                self.stdout.write(
                    self.style.WARNING(f'‚ö†Ô∏è Area ƒë√£ t·ªìn t·∫°i: {area.name}')
                )
        
        # T·∫°o Locations m·∫´u (legacy)
        locations_data = [
            {
                'name': 'Tr·ª• s·ªü c≈©',
                'lat': 10.7769,
                'lng': 106.7009,
                'radius_m': 50,
            },
            {
                'name': 'VƒÉn ph√≤ng ph·ª•',
                'lat': 10.7769,
                'lng': 106.7009,
                'radius_m': 80,
            },
        ]
        
        for loc_data in locations_data:
            location, created = Location.objects.get_or_create(
                name=loc_data['name'],
                defaults={
                    'lat': loc_data['lat'],
                    'lng': loc_data['lng'],
                    'radius_m': loc_data['radius_m'],
                    'is_active': True,
                }
            )
            if created:
                self.stdout.write(
                    self.style.SUCCESS(f'‚úÖ ƒê√£ t·∫°o Location: {location.name}')
                )
            else:
                self.stdout.write(
                    self.style.WARNING(f'‚ö†Ô∏è Location ƒë√£ t·ªìn t·∫°i: {location.name}')
                )
        
        self.stdout.write(
            self.style.SUCCESS('\nüéâ Ho√†n th√†nh t·∫°o d·ªØ li·ªáu m·∫´u!')
        )
